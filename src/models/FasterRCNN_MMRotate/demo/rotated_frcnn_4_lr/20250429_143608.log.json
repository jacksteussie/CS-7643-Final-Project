{"mmdet_version": "2.28.2", "CLASSES": ["plane", "baseball-diamond", "bridge", "ground-track-field", "small-vehicle", "large-vehicle", "ship", "tennis-court", "basketball-court", "storage-tank", "soccer-ball-field", "roundabout", "harbor", "swimming-pool", "helicopter", "container-crane"], "env_info": "sys.platform: linux\nPython: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla T4\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 12.1, V12.1.105\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.8.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 10.2\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 7.6.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.0\nOpenCV: 4.11.0\nMMCV: 1.7.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 10.2\nMMRotate: 0.3.4+", "config": "dataset_type = 'DOTADataset'\ndata_root = '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5'\nimg_scale = (512, 512)\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RResize', img_scale=(512, 512)),\n    dict(\n        type='RRandomFlip',\n        flip_ratio=[0.25, 0.25, 0.25],\n        direction=['horizontal', 'vertical', 'diagonal'],\n        version='le90'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(512, 512),\n        flip=False,\n        transforms=[\n            dict(type='RResize'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=8,\n    train=dict(\n        type='DOTADataset',\n        ann_file=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/train/annfiles_corr/',\n        img_prefix=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/train/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RResize', img_scale=(512, 512)),\n            dict(\n                type='RRandomFlip',\n                flip_ratio=[0.25, 0.25, 0.25],\n                direction=['horizontal', 'vertical', 'diagonal'],\n                version='le90'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        version='le90',\n        classes=('plane', 'baseball-diamond', 'bridge', 'ground-track-field',\n                 'small-vehicle', 'large-vehicle', 'ship', 'tennis-court',\n                 'basketball-court', 'storage-tank', 'soccer-ball-field',\n                 'roundabout', 'harbor', 'swimming-pool', 'helicopter',\n                 'container-crane')),\n    val=dict(\n        type='DOTADataset',\n        ann_file=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/val/annfiles_corr/',\n        img_prefix=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/val/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90',\n        classes=('plane', 'baseball-diamond', 'bridge', 'ground-track-field',\n                 'small-vehicle', 'large-vehicle', 'ship', 'tennis-court',\n                 'basketball-court', 'storage-tank', 'soccer-ball-field',\n                 'roundabout', 'harbor', 'swimming-pool', 'helicopter',\n                 'container-crane')),\n    test=dict(\n        type='DOTADataset',\n        ann_file=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/val/annfiles_corr/',\n        img_prefix=\n        '/teamspace/studios/this_studio/mmrotate/data/DOTA1_5/val/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(512, 512),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90',\n        classes=('plane', 'baseball-diamond', 'bridge', 'ground-track-field',\n                 'small-vehicle', 'large-vehicle', 'ship', 'tennis-court',\n                 'basketball-court', 'storage-tank', 'soccer-ball-field',\n                 'roundabout', 'harbor', 'swimming-pool', 'helicopter',\n                 'container-crane')))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='AdamW', lr=0.001, weight_decay=5e-05)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.001,\n    policy='CosineAnnealing',\n    min_lr=1e-06)\nrunner = dict(type='EpochBasedRunner', max_epochs=50)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1), ('val', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nangle_version = 'le90'\nmodel = dict(\n    type='RotatedFasterRCNN',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RotatedRPNHead',\n        in_channels=256,\n        feat_channels=256,\n        version='le90',\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='RotatedStandardRoIHead',\n        version='le90',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='RotatedShared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=16,\n            bbox_coder=dict(\n                type='DeltaXYWHAHBBoxCoder',\n                angle_range='le90',\n                norm_factor=2,\n                edge_swap=True,\n                target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n                target_stds=(0.1, 0.1, 0.2, 0.2, 0.1)),\n            reg_class_agnostic=True,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=False,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            nms_pre=2000,\n            min_bbox_size=0,\n            score_thr=0.05,\n            nms=dict(iou_thr=0.1),\n            max_per_img=2000)))\nwork_dir = '/teamspace/studios/this_studio/mmrotate/demo/rotated_frcnn_4_lr'\nclasses = ('plane', 'baseball-diamond', 'bridge', 'ground-track-field',\n           'small-vehicle', 'large-vehicle', 'ship', 'tennis-court',\n           'basketball-court', 'storage-tank', 'soccer-ball-field',\n           'roundabout', 'harbor', 'swimming-pool', 'helicopter',\n           'container-crane')\nauto_resume = False\ngpu_ids = range(0, 4)\n", "seed": 0, "exp_name": "rotated_faster_rcnn_r50_fpn_1x_dota_le90_val_1p5.py", "epoch": 24, "iter": 15000, "mmcv_version": "1.7.2", "time": "Sun Apr 27 07:07:19 2025", "hook_msgs": {"last_ckpt": "/teamspace/studios/this_studio/mmrotate/demo/rotated_frcnn_4_lr/epoch_23.pth"}}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 0.0001, "memory": 3687, "data_time": 0.06089, "loss_rpn_cls": 0.01516, "loss_rpn_bbox": 0.0155, "loss_cls": 0.06296, "acc": 97.50879, "loss_bbox": 0.09268, "loss": 0.18631, "grad_norm": 1.25881, "time": 0.46595}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.0001, "memory": 4542, "data_time": 0.00671, "loss_rpn_cls": 0.01328, "loss_rpn_bbox": 0.01374, "loss_cls": 0.05778, "acc": 97.71509, "loss_bbox": 0.08537, "loss": 0.17018, "grad_norm": 1.09418, "time": 0.40363}
{"mode": "train", "epoch": 25, "iter": 150, "lr": 0.0001, "memory": 6435, "data_time": 0.00642, "loss_rpn_cls": 0.01344, "loss_rpn_bbox": 0.01496, "loss_cls": 0.05874, "acc": 97.6521, "loss_bbox": 0.08467, "loss": 0.1718, "grad_norm": 1.08059, "time": 0.40094}
{"mode": "train", "epoch": 25, "iter": 200, "lr": 0.0001, "memory": 6435, "data_time": 0.00649, "loss_rpn_cls": 0.0137, "loss_rpn_bbox": 0.01343, "loss_cls": 0.05738, "acc": 97.69971, "loss_bbox": 0.08309, "loss": 0.16761, "grad_norm": 1.08474, "time": 0.40236}
{"mode": "train", "epoch": 25, "iter": 250, "lr": 0.0001, "memory": 6435, "data_time": 0.0064, "loss_rpn_cls": 0.01271, "loss_rpn_bbox": 0.01303, "loss_cls": 0.05534, "acc": 97.84033, "loss_bbox": 0.08109, "loss": 0.16216, "grad_norm": 1.02485, "time": 0.40082}
{"mode": "train", "epoch": 25, "iter": 300, "lr": 0.0001, "memory": 6435, "data_time": 0.00656, "loss_rpn_cls": 0.01217, "loss_rpn_bbox": 0.0137, "loss_cls": 0.05372, "acc": 97.84961, "loss_bbox": 0.07691, "loss": 0.1565, "grad_norm": 1.0552, "time": 0.40147}
{"mode": "train", "epoch": 25, "iter": 350, "lr": 0.0001, "memory": 6435, "data_time": 0.00661, "loss_rpn_cls": 0.01312, "loss_rpn_bbox": 0.01414, "loss_cls": 0.05631, "acc": 97.7749, "loss_bbox": 0.07955, "loss": 0.16312, "grad_norm": 1.10065, "time": 0.40162}
{"mode": "train", "epoch": 25, "iter": 400, "lr": 0.0001, "memory": 6435, "data_time": 0.00641, "loss_rpn_cls": 0.01313, "loss_rpn_bbox": 0.01315, "loss_cls": 0.05431, "acc": 97.86279, "loss_bbox": 0.07487, "loss": 0.15546, "grad_norm": 0.95626, "time": 0.40456}
{"mode": "train", "epoch": 25, "iter": 450, "lr": 0.0001, "memory": 6435, "data_time": 0.00632, "loss_rpn_cls": 0.01131, "loss_rpn_bbox": 0.013, "loss_cls": 0.05091, "acc": 97.97656, "loss_bbox": 0.0761, "loss": 0.15132, "grad_norm": 1.00992, "time": 0.4049}
{"mode": "train", "epoch": 25, "iter": 500, "lr": 0.0001, "memory": 6435, "data_time": 0.00635, "loss_rpn_cls": 0.01328, "loss_rpn_bbox": 0.01446, "loss_cls": 0.05666, "acc": 97.75635, "loss_bbox": 0.08451, "loss": 0.16891, "grad_norm": 1.04923, "time": 0.40353}
{"mode": "train", "epoch": 25, "iter": 550, "lr": 0.0001, "memory": 6435, "data_time": 0.00629, "loss_rpn_cls": 0.01317, "loss_rpn_bbox": 0.0143, "loss_cls": 0.05321, "acc": 97.8667, "loss_bbox": 0.08249, "loss": 0.16317, "grad_norm": 1.05504, "time": 0.40819}
{"mode": "train", "epoch": 25, "iter": 600, "lr": 0.0001, "memory": 6435, "data_time": 0.0062, "loss_rpn_cls": 0.01402, "loss_rpn_bbox": 0.01496, "loss_cls": 0.0555, "acc": 97.84888, "loss_bbox": 0.08758, "loss": 0.17205, "grad_norm": 1.0776, "time": 0.40694}
{"mode": "val", "epoch": 25, "iter": 1536, "lr": 0.0001, "mAP": 0.48108}
{"mode": "val", "epoch": 25, "iter": 384, "lr": 0.0001, "memory": 7197, "data_time": 0.01272, "loss_rpn_cls_val": 0.07492, "loss_rpn_bbox_val": 0.01814, "loss_cls_val": 0.09692, "acc_val": 96.98041, "loss_bbox_val": 0.09931, "loss_val": 0.28929, "time": 0.1873}
{"mode": "train", "epoch": 26, "iter": 50, "lr": 7e-05, "memory": 7197, "data_time": 0.05895, "loss_rpn_cls": 0.0133, "loss_rpn_bbox": 0.01394, "loss_cls": 0.05239, "acc": 97.92871, "loss_bbox": 0.07434, "loss": 0.15396, "grad_norm": 0.97824, "time": 0.45803}
{"mode": "train", "epoch": 26, "iter": 100, "lr": 7e-05, "memory": 7197, "data_time": 0.00639, "loss_rpn_cls": 0.01171, "loss_rpn_bbox": 0.01323, "loss_cls": 0.05213, "acc": 97.95142, "loss_bbox": 0.07679, "loss": 0.15386, "grad_norm": 0.9621, "time": 0.40082}
{"mode": "train", "epoch": 26, "iter": 150, "lr": 7e-05, "memory": 7197, "data_time": 0.00648, "loss_rpn_cls": 0.01008, "loss_rpn_bbox": 0.01257, "loss_cls": 0.05197, "acc": 97.93213, "loss_bbox": 0.07643, "loss": 0.15104, "grad_norm": 0.97302, "time": 0.40358}
{"mode": "train", "epoch": 26, "iter": 200, "lr": 7e-05, "memory": 7197, "data_time": 0.00642, "loss_rpn_cls": 0.01344, "loss_rpn_bbox": 0.01448, "loss_cls": 0.05248, "acc": 97.89673, "loss_bbox": 0.07792, "loss": 0.15832, "grad_norm": 0.9804, "time": 0.40381}
{"mode": "train", "epoch": 26, "iter": 250, "lr": 7e-05, "memory": 7197, "data_time": 0.00647, "loss_rpn_cls": 0.01118, "loss_rpn_bbox": 0.01261, "loss_cls": 0.0511, "acc": 97.98022, "loss_bbox": 0.07639, "loss": 0.15127, "grad_norm": 0.9819, "time": 0.40477}
{"mode": "train", "epoch": 26, "iter": 300, "lr": 7e-05, "memory": 7197, "data_time": 0.00649, "loss_rpn_cls": 0.0111, "loss_rpn_bbox": 0.01329, "loss_cls": 0.05154, "acc": 97.92676, "loss_bbox": 0.07996, "loss": 0.15589, "grad_norm": 1.00461, "time": 0.40087}
{"mode": "train", "epoch": 26, "iter": 350, "lr": 7e-05, "memory": 7197, "data_time": 0.00642, "loss_rpn_cls": 0.01246, "loss_rpn_bbox": 0.01351, "loss_cls": 0.05184, "acc": 97.9209, "loss_bbox": 0.07951, "loss": 0.15732, "grad_norm": 1.03706, "time": 0.40432}
{"mode": "train", "epoch": 26, "iter": 400, "lr": 7e-05, "memory": 7197, "data_time": 0.00656, "loss_rpn_cls": 0.01106, "loss_rpn_bbox": 0.01267, "loss_cls": 0.0476, "acc": 98.10596, "loss_bbox": 0.07093, "loss": 0.14226, "grad_norm": 0.97049, "time": 0.40514}
{"mode": "train", "epoch": 26, "iter": 450, "lr": 7e-05, "memory": 7197, "data_time": 0.0066, "loss_rpn_cls": 0.01198, "loss_rpn_bbox": 0.01411, "loss_cls": 0.05273, "acc": 97.92456, "loss_bbox": 0.0769, "loss": 0.15571, "grad_norm": 1.05867, "time": 0.40722}
{"mode": "train", "epoch": 26, "iter": 500, "lr": 7e-05, "memory": 7197, "data_time": 0.00651, "loss_rpn_cls": 0.01167, "loss_rpn_bbox": 0.0128, "loss_cls": 0.05039, "acc": 97.98511, "loss_bbox": 0.07512, "loss": 0.14998, "grad_norm": 0.9811, "time": 0.40208}
{"mode": "train", "epoch": 26, "iter": 550, "lr": 7e-05, "memory": 7197, "data_time": 0.00654, "loss_rpn_cls": 0.01016, "loss_rpn_bbox": 0.01239, "loss_cls": 0.05055, "acc": 97.96118, "loss_bbox": 0.07272, "loss": 0.14583, "grad_norm": 0.99298, "time": 0.40673}
{"mode": "train", "epoch": 26, "iter": 600, "lr": 7e-05, "memory": 7197, "data_time": 0.00652, "loss_rpn_cls": 0.01125, "loss_rpn_bbox": 0.01309, "loss_cls": 0.04919, "acc": 98.01221, "loss_bbox": 0.07515, "loss": 0.14868, "grad_norm": 0.98516, "time": 0.40418}
{"mode": "val", "epoch": 26, "iter": 1536, "lr": 7e-05, "mAP": 0.48855}
{"mode": "val", "epoch": 26, "iter": 384, "lr": 7e-05, "memory": 7206, "data_time": 0.01289, "loss_rpn_cls_val": 0.07455, "loss_rpn_bbox_val": 0.01767, "loss_cls_val": 0.09797, "acc_val": 96.99434, "loss_bbox_val": 0.1003, "loss_val": 0.29048, "time": 0.18762}
{"mode": "train", "epoch": 27, "iter": 50, "lr": 4e-05, "memory": 7206, "data_time": 0.0579, "loss_rpn_cls": 0.01101, "loss_rpn_bbox": 0.01232, "loss_cls": 0.04894, "acc": 98.02319, "loss_bbox": 0.06997, "loss": 0.14225, "grad_norm": 0.92601, "time": 0.4553}
{"mode": "train", "epoch": 27, "iter": 100, "lr": 4e-05, "memory": 7206, "data_time": 0.00649, "loss_rpn_cls": 0.0112, "loss_rpn_bbox": 0.01264, "loss_cls": 0.04777, "acc": 98.11035, "loss_bbox": 0.06887, "loss": 0.14048, "grad_norm": 0.97175, "time": 0.40188}
{"mode": "train", "epoch": 27, "iter": 150, "lr": 4e-05, "memory": 7206, "data_time": 0.00644, "loss_rpn_cls": 0.01142, "loss_rpn_bbox": 0.0128, "loss_cls": 0.05133, "acc": 97.96143, "loss_bbox": 0.07687, "loss": 0.15241, "grad_norm": 0.98404, "time": 0.40303}
{"mode": "train", "epoch": 27, "iter": 200, "lr": 4e-05, "memory": 7206, "data_time": 0.00649, "loss_rpn_cls": 0.01134, "loss_rpn_bbox": 0.01274, "loss_cls": 0.04937, "acc": 98.05005, "loss_bbox": 0.07486, "loss": 0.14831, "grad_norm": 0.9909, "time": 0.40672}
{"mode": "train", "epoch": 27, "iter": 250, "lr": 4e-05, "memory": 7206, "data_time": 0.00635, "loss_rpn_cls": 0.01205, "loss_rpn_bbox": 0.01286, "loss_cls": 0.0505, "acc": 97.9812, "loss_bbox": 0.07478, "loss": 0.15019, "grad_norm": 0.99227, "time": 0.40108}
{"mode": "train", "epoch": 27, "iter": 300, "lr": 4e-05, "memory": 7206, "data_time": 0.00651, "loss_rpn_cls": 0.01163, "loss_rpn_bbox": 0.01368, "loss_cls": 0.04957, "acc": 98.02271, "loss_bbox": 0.07679, "loss": 0.15168, "grad_norm": 0.98403, "time": 0.40631}
{"mode": "train", "epoch": 27, "iter": 350, "lr": 4e-05, "memory": 7206, "data_time": 0.0064, "loss_rpn_cls": 0.01098, "loss_rpn_bbox": 0.01359, "loss_cls": 0.04951, "acc": 98.02515, "loss_bbox": 0.07467, "loss": 0.14874, "grad_norm": 0.99705, "time": 0.41101}
{"mode": "train", "epoch": 27, "iter": 400, "lr": 4e-05, "memory": 7206, "data_time": 0.00643, "loss_rpn_cls": 0.01102, "loss_rpn_bbox": 0.01295, "loss_cls": 0.04775, "acc": 98.06006, "loss_bbox": 0.07094, "loss": 0.14267, "grad_norm": 0.96882, "time": 0.40426}
{"mode": "train", "epoch": 27, "iter": 450, "lr": 4e-05, "memory": 7206, "data_time": 0.00649, "loss_rpn_cls": 0.01115, "loss_rpn_bbox": 0.01369, "loss_cls": 0.04952, "acc": 98.03491, "loss_bbox": 0.07313, "loss": 0.1475, "grad_norm": 0.96354, "time": 0.40442}
{"mode": "train", "epoch": 27, "iter": 500, "lr": 4e-05, "memory": 7206, "data_time": 0.00653, "loss_rpn_cls": 0.00976, "loss_rpn_bbox": 0.01209, "loss_cls": 0.04565, "acc": 98.16382, "loss_bbox": 0.07111, "loss": 0.1386, "grad_norm": 0.94786, "time": 0.40611}
{"mode": "train", "epoch": 27, "iter": 550, "lr": 4e-05, "memory": 7206, "data_time": 0.00638, "loss_rpn_cls": 0.00991, "loss_rpn_bbox": 0.01221, "loss_cls": 0.0479, "acc": 98.08691, "loss_bbox": 0.07173, "loss": 0.14176, "grad_norm": 0.98345, "time": 0.39963}
{"mode": "train", "epoch": 27, "iter": 600, "lr": 4e-05, "memory": 7206, "data_time": 0.00645, "loss_rpn_cls": 0.0119, "loss_rpn_bbox": 0.01338, "loss_cls": 0.04995, "acc": 98.00024, "loss_bbox": 0.07751, "loss": 0.15275, "grad_norm": 0.96585, "time": 0.40475}
{"mode": "val", "epoch": 27, "iter": 1536, "lr": 4e-05, "mAP": 0.48502}
{"mode": "val", "epoch": 27, "iter": 384, "lr": 4e-05, "memory": 7206, "data_time": 0.01301, "loss_rpn_cls_val": 0.07995, "loss_rpn_bbox_val": 0.01763, "loss_cls_val": 0.09732, "acc_val": 97.07076, "loss_bbox_val": 0.09866, "loss_val": 0.29356, "time": 0.18792}
{"mode": "train", "epoch": 28, "iter": 50, "lr": 3e-05, "memory": 7206, "data_time": 0.0603, "loss_rpn_cls": 0.01016, "loss_rpn_bbox": 0.01233, "loss_cls": 0.04756, "acc": 98.11279, "loss_bbox": 0.07036, "loss": 0.14041, "grad_norm": 0.95661, "time": 0.45536}
{"mode": "train", "epoch": 28, "iter": 100, "lr": 3e-05, "memory": 7206, "data_time": 0.00658, "loss_rpn_cls": 0.01108, "loss_rpn_bbox": 0.01302, "loss_cls": 0.04704, "acc": 98.11011, "loss_bbox": 0.07154, "loss": 0.14267, "grad_norm": 0.95686, "time": 0.40387}
{"mode": "train", "epoch": 28, "iter": 150, "lr": 3e-05, "memory": 7206, "data_time": 0.00668, "loss_rpn_cls": 0.01064, "loss_rpn_bbox": 0.01256, "loss_cls": 0.04929, "acc": 98.03906, "loss_bbox": 0.07221, "loss": 0.1447, "grad_norm": 0.97826, "time": 0.40114}
{"mode": "train", "epoch": 28, "iter": 200, "lr": 3e-05, "memory": 7206, "data_time": 0.00659, "loss_rpn_cls": 0.01131, "loss_rpn_bbox": 0.01219, "loss_cls": 0.04647, "acc": 98.12817, "loss_bbox": 0.06757, "loss": 0.13753, "grad_norm": 0.95127, "time": 0.40189}
{"mode": "train", "epoch": 28, "iter": 250, "lr": 3e-05, "memory": 7206, "data_time": 0.00653, "loss_rpn_cls": 0.01049, "loss_rpn_bbox": 0.01229, "loss_cls": 0.04581, "acc": 98.17114, "loss_bbox": 0.07306, "loss": 0.14164, "grad_norm": 0.95678, "time": 0.40789}
{"mode": "train", "epoch": 28, "iter": 300, "lr": 3e-05, "memory": 7206, "data_time": 0.00647, "loss_rpn_cls": 0.01094, "loss_rpn_bbox": 0.01277, "loss_cls": 0.04912, "acc": 98.04102, "loss_bbox": 0.06936, "loss": 0.14219, "grad_norm": 0.97843, "time": 0.40674}
{"mode": "train", "epoch": 28, "iter": 350, "lr": 3e-05, "memory": 7206, "data_time": 0.00656, "loss_rpn_cls": 0.01037, "loss_rpn_bbox": 0.0129, "loss_cls": 0.04778, "acc": 98.08887, "loss_bbox": 0.07642, "loss": 0.14746, "grad_norm": 0.95822, "time": 0.40286}
{"mode": "train", "epoch": 28, "iter": 400, "lr": 3e-05, "memory": 7206, "data_time": 0.00639, "loss_rpn_cls": 0.01199, "loss_rpn_bbox": 0.01431, "loss_cls": 0.05084, "acc": 97.97534, "loss_bbox": 0.07553, "loss": 0.15267, "grad_norm": 0.95916, "time": 0.40835}
{"mode": "train", "epoch": 28, "iter": 450, "lr": 3e-05, "memory": 7206, "data_time": 0.00705, "loss_rpn_cls": 0.01076, "loss_rpn_bbox": 0.01285, "loss_cls": 0.04866, "acc": 98.05566, "loss_bbox": 0.07335, "loss": 0.14563, "grad_norm": 0.93522, "time": 0.41276}
{"mode": "train", "epoch": 28, "iter": 500, "lr": 3e-05, "memory": 7206, "data_time": 0.00708, "loss_rpn_cls": 0.01049, "loss_rpn_bbox": 0.01167, "loss_cls": 0.04482, "acc": 98.22632, "loss_bbox": 0.0667, "loss": 0.13368, "grad_norm": 0.9122, "time": 0.41214}
{"mode": "train", "epoch": 28, "iter": 550, "lr": 3e-05, "memory": 7206, "data_time": 0.00673, "loss_rpn_cls": 0.01053, "loss_rpn_bbox": 0.01283, "loss_cls": 0.04631, "acc": 98.14673, "loss_bbox": 0.07086, "loss": 0.14053, "grad_norm": 0.92503, "time": 0.40656}
{"mode": "train", "epoch": 28, "iter": 600, "lr": 3e-05, "memory": 7206, "data_time": 0.00693, "loss_rpn_cls": 0.01075, "loss_rpn_bbox": 0.01355, "loss_cls": 0.04802, "acc": 98.08374, "loss_bbox": 0.07565, "loss": 0.14797, "grad_norm": 0.96458, "time": 0.41017}
{"mode": "val", "epoch": 28, "iter": 1536, "lr": 3e-05, "mAP": 0.48463}
{"mode": "val", "epoch": 28, "iter": 384, "lr": 3e-05, "memory": 7208, "data_time": 0.01374, "loss_rpn_cls_val": 0.08123, "loss_rpn_bbox_val": 0.01766, "loss_cls_val": 0.09763, "acc_val": 97.06573, "loss_bbox_val": 0.09773, "loss_val": 0.29425, "time": 0.19175}
{"mode": "train", "epoch": 29, "iter": 50, "lr": 1e-05, "memory": 7208, "data_time": 0.06211, "loss_rpn_cls": 0.01029, "loss_rpn_bbox": 0.01254, "loss_cls": 0.04631, "acc": 98.15698, "loss_bbox": 0.06916, "loss": 0.13829, "grad_norm": 0.9424, "time": 0.46193}
{"mode": "train", "epoch": 29, "iter": 100, "lr": 1e-05, "memory": 7208, "data_time": 0.00765, "loss_rpn_cls": 0.00922, "loss_rpn_bbox": 0.01111, "loss_cls": 0.04435, "acc": 98.23901, "loss_bbox": 0.06543, "loss": 0.13011, "grad_norm": 0.89069, "time": 0.40779}
{"mode": "train", "epoch": 29, "iter": 150, "lr": 1e-05, "memory": 7208, "data_time": 0.00793, "loss_rpn_cls": 0.0108, "loss_rpn_bbox": 0.01272, "loss_cls": 0.04816, "acc": 98.07666, "loss_bbox": 0.07606, "loss": 0.14775, "grad_norm": 0.94388, "time": 0.40877}
{"mode": "train", "epoch": 29, "iter": 200, "lr": 1e-05, "memory": 7208, "data_time": 0.00675, "loss_rpn_cls": 0.00979, "loss_rpn_bbox": 0.01258, "loss_cls": 0.04713, "acc": 98.13403, "loss_bbox": 0.06891, "loss": 0.13842, "grad_norm": 0.9049, "time": 0.40682}
{"mode": "train", "epoch": 29, "iter": 250, "lr": 1e-05, "memory": 7208, "data_time": 0.00661, "loss_rpn_cls": 0.01088, "loss_rpn_bbox": 0.0132, "loss_cls": 0.04884, "acc": 98.05615, "loss_bbox": 0.07468, "loss": 0.1476, "grad_norm": 0.97798, "time": 0.41185}
{"mode": "train", "epoch": 29, "iter": 300, "lr": 1e-05, "memory": 7208, "data_time": 0.00683, "loss_rpn_cls": 0.01072, "loss_rpn_bbox": 0.01325, "loss_cls": 0.0483, "acc": 98.07495, "loss_bbox": 0.06856, "loss": 0.14084, "grad_norm": 0.93236, "time": 0.40514}
{"mode": "train", "epoch": 29, "iter": 350, "lr": 1e-05, "memory": 7208, "data_time": 0.00695, "loss_rpn_cls": 0.0115, "loss_rpn_bbox": 0.01199, "loss_cls": 0.04509, "acc": 98.19092, "loss_bbox": 0.07099, "loss": 0.13958, "grad_norm": 0.93092, "time": 0.41159}
{"mode": "train", "epoch": 29, "iter": 400, "lr": 1e-05, "memory": 7208, "data_time": 0.00672, "loss_rpn_cls": 0.01031, "loss_rpn_bbox": 0.01249, "loss_cls": 0.04998, "acc": 97.98828, "loss_bbox": 0.07056, "loss": 0.14334, "grad_norm": 0.92304, "time": 0.41016}
{"mode": "train", "epoch": 29, "iter": 450, "lr": 1e-05, "memory": 7208, "data_time": 0.00692, "loss_rpn_cls": 0.01118, "loss_rpn_bbox": 0.01214, "loss_cls": 0.04488, "acc": 98.20679, "loss_bbox": 0.07138, "loss": 0.13957, "grad_norm": 0.91233, "time": 0.40758}
{"mode": "train", "epoch": 29, "iter": 500, "lr": 1e-05, "memory": 7208, "data_time": 0.00674, "loss_rpn_cls": 0.01038, "loss_rpn_bbox": 0.0129, "loss_cls": 0.04851, "acc": 98.02246, "loss_bbox": 0.07138, "loss": 0.14318, "grad_norm": 0.98556, "time": 0.41016}
{"mode": "train", "epoch": 29, "iter": 550, "lr": 1e-05, "memory": 7208, "data_time": 0.00835, "loss_rpn_cls": 0.01036, "loss_rpn_bbox": 0.01195, "loss_cls": 0.04633, "acc": 98.16357, "loss_bbox": 0.07063, "loss": 0.13927, "grad_norm": 0.91998, "time": 0.40977}
{"mode": "train", "epoch": 29, "iter": 600, "lr": 1e-05, "memory": 7208, "data_time": 0.00699, "loss_rpn_cls": 0.00947, "loss_rpn_bbox": 0.0124, "loss_cls": 0.04544, "acc": 98.19312, "loss_bbox": 0.07275, "loss": 0.14006, "grad_norm": 0.93771, "time": 0.41204}
{"mode": "val", "epoch": 29, "iter": 1536, "lr": 1e-05, "mAP": 0.4845}
{"mode": "val", "epoch": 29, "iter": 384, "lr": 1e-05, "memory": 7208, "data_time": 0.01341, "loss_rpn_cls_val": 0.08312, "loss_rpn_bbox_val": 0.01755, "loss_cls_val": 0.09771, "acc_val": 97.09218, "loss_bbox_val": 0.09816, "loss_val": 0.29654, "time": 0.19094}
{"mode": "train", "epoch": 30, "iter": 50, "lr": 0.0, "memory": 7208, "data_time": 0.06102, "loss_rpn_cls": 0.01008, "loss_rpn_bbox": 0.01216, "loss_cls": 0.04698, "acc": 98.14478, "loss_bbox": 0.06941, "loss": 0.13863, "grad_norm": 0.93984, "time": 0.46034}
{"mode": "train", "epoch": 30, "iter": 100, "lr": 0.0, "memory": 7208, "data_time": 0.00681, "loss_rpn_cls": 0.01067, "loss_rpn_bbox": 0.01263, "loss_cls": 0.04773, "acc": 98.11133, "loss_bbox": 0.07335, "loss": 0.14437, "grad_norm": 0.92835, "time": 0.40912}
{"mode": "train", "epoch": 30, "iter": 150, "lr": 0.0, "memory": 7208, "data_time": 0.00693, "loss_rpn_cls": 0.0103, "loss_rpn_bbox": 0.01209, "loss_cls": 0.04514, "acc": 98.20044, "loss_bbox": 0.06507, "loss": 0.1326, "grad_norm": 0.89073, "time": 0.40648}
{"mode": "train", "epoch": 30, "iter": 200, "lr": 0.0, "memory": 7208, "data_time": 0.00674, "loss_rpn_cls": 0.00997, "loss_rpn_bbox": 0.01073, "loss_cls": 0.04294, "acc": 98.28784, "loss_bbox": 0.06618, "loss": 0.12983, "grad_norm": 0.91739, "time": 0.40767}
{"mode": "train", "epoch": 30, "iter": 250, "lr": 0.0, "memory": 7208, "data_time": 0.00687, "loss_rpn_cls": 0.01013, "loss_rpn_bbox": 0.01289, "loss_cls": 0.04721, "acc": 98.11694, "loss_bbox": 0.07477, "loss": 0.145, "grad_norm": 0.94187, "time": 0.41129}
{"mode": "train", "epoch": 30, "iter": 300, "lr": 0.0, "memory": 7208, "data_time": 0.00666, "loss_rpn_cls": 0.01011, "loss_rpn_bbox": 0.01182, "loss_cls": 0.0457, "acc": 98.1958, "loss_bbox": 0.07116, "loss": 0.13879, "grad_norm": 0.89535, "time": 0.41447}
{"mode": "train", "epoch": 30, "iter": 350, "lr": 0.0, "memory": 7208, "data_time": 0.00663, "loss_rpn_cls": 0.01073, "loss_rpn_bbox": 0.01243, "loss_cls": 0.04536, "acc": 98.18994, "loss_bbox": 0.07167, "loss": 0.1402, "grad_norm": 0.90503, "time": 0.4073}
{"mode": "train", "epoch": 30, "iter": 400, "lr": 0.0, "memory": 7208, "data_time": 0.00688, "loss_rpn_cls": 0.01046, "loss_rpn_bbox": 0.01277, "loss_cls": 0.04675, "acc": 98.14795, "loss_bbox": 0.06794, "loss": 0.13792, "grad_norm": 0.92873, "time": 0.41142}
{"mode": "train", "epoch": 30, "iter": 450, "lr": 0.0, "memory": 7208, "data_time": 0.00687, "loss_rpn_cls": 0.01109, "loss_rpn_bbox": 0.01256, "loss_cls": 0.04641, "acc": 98.1377, "loss_bbox": 0.07113, "loss": 0.14119, "grad_norm": 0.90357, "time": 0.40839}
{"mode": "train", "epoch": 30, "iter": 500, "lr": 0.0, "memory": 7208, "data_time": 0.00664, "loss_rpn_cls": 0.01114, "loss_rpn_bbox": 0.01333, "loss_cls": 0.04814, "acc": 98.08862, "loss_bbox": 0.0718, "loss": 0.14441, "grad_norm": 0.96614, "time": 0.40897}
{"mode": "train", "epoch": 30, "iter": 550, "lr": 0.0, "memory": 7208, "data_time": 0.00681, "loss_rpn_cls": 0.01035, "loss_rpn_bbox": 0.01339, "loss_cls": 0.04947, "acc": 98.01733, "loss_bbox": 0.07287, "loss": 0.14609, "grad_norm": 0.9288, "time": 0.40723}
{"mode": "train", "epoch": 30, "iter": 600, "lr": 0.0, "memory": 7208, "data_time": 0.0068, "loss_rpn_cls": 0.01109, "loss_rpn_bbox": 0.01192, "loss_cls": 0.04627, "acc": 98.15454, "loss_bbox": 0.06991, "loss": 0.13918, "grad_norm": 0.91388, "time": 0.41247}
{"mode": "val", "epoch": 30, "iter": 1536, "lr": 0.0, "mAP": 0.48565}
{"mode": "val", "epoch": 30, "iter": 384, "lr": 0.0, "memory": 7208, "data_time": 0.01361, "loss_rpn_cls_val": 0.08416, "loss_rpn_bbox_val": 0.01748, "loss_cls_val": 0.09793, "acc_val": 97.08207, "loss_bbox_val": 0.09779, "loss_val": 0.29737, "time": 0.19096}
